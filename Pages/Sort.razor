@page "/sort"
@using System.Net.Http
using System.Linq;
@inject HttpClient client

@using Newtonsoft.Json
@using Data

<h1>Sort</h1>

<p>This component demonstrates sorting the dataset.</p>

<p>Please select the way you want the data to be ordered.</p>  

    <div class="container-fluid">

        <div class="row justify-content-center" style="margin-bottom:50px">
            <h3 class="text-center">Store Apps - First Ten Records</h3>
        </div>

        <div class="row" style="margin:25px;">
            @if (StoreApps != null)
            {
                <table class="table table-hover table-bordered table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                Id
                                <button @onclick="@OrderIdASC" value="id">ASC </button>
                                <button @onclick="@OrderIdDSC" value="id">DSC </button>
                            </th>

                            <th>
                                Name
                                <button @onclick="@OrderNameASC" value="name">ASC </button>
                                <button @onclick="@OrderNameDSC" value="name">DSC </button>
                            </th>



                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var storeapp in StoreApps)
                        {
                            <tr class="justify-content-center">
                                <td>@storeapp.Id</td>
                                <td>@storeapp.Name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            @if (!StoreApps.Any())
            {
                <div class="justify-content-center">
                    <h5>No records to show</h5>
                </div>
            }
        </div>

    </div>

    @code {

        string responseBody = "";
        List<StoreApp> StoreApps = new List<StoreApp>();

        protected override async Task OnInitializedAsync()
        {
            var apiName = "api/StoreApps";
            var httpResponse = await client.GetAsync(apiName);

            if (httpResponse.IsSuccessStatusCode)
            {
                responseBody = await httpResponse.Content.ReadAsStringAsync();
                StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
                StateHasChanged();
            }

        }
        public string column = "";
        public string order = "";


        public async Task GetSortAsyncASC(string order)
        {
            var apiName = "api/StoreApps/Sort/asc?column=";
            apiName += order;
            var httpResponse = await client.GetAsync(apiName);

            if (httpResponse.IsSuccessStatusCode)
            {
                responseBody = await httpResponse.Content.ReadAsStringAsync();
                StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
                StateHasChanged();
            }

        }



        public async Task GetSortAsyncDSC(string order)
        {
            var apiName = "api/StoreApps/Sort/dsc?coulmn=";
            apiName += order;
            var httpResponse = await client.GetAsync(apiName);

            if (httpResponse.IsSuccessStatusCode)
            {
                responseBody = await httpResponse.Content.ReadAsStringAsync();
                StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
                StateHasChanged();
            }

        }

        public void OrderIdASC()
        {
            StoreApps.Sort((x, y) => x.Id.CompareTo(y.Id));
        }

        public void OrderIdDSC()
        {
            StoreApps.Sort((x, y) => y.Id.CompareTo(x.Id));
        }

        public void OrderNameASC()
        {
            StoreApps.Sort((x, y) => x.Id.CompareTo(y.Id));
        }

        public void OrderNameDSC()
        {
            StoreApps.Sort((x, y) => y.Id.CompareTo(x.Id));
        }


    }
