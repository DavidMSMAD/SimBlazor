@page "/search"
@using System.Net.Http

@inject HttpClient client

@using Newtonsoft.Json
@using Data

@using Microsoft.Extensions.Logging
@inject ILogger<Search> Logger




<h1>Search</h1>


<EditForm class="form-inline my-2" Model="@searchModel" OnValidSubmit="SearchStore">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText class="form-control mx-2" id="name" @bind-Value="searchModel.Name" placeholder="Enter App Name...." />
    <button class="btn btn-outline-primary" type="button" @onclick="EnterSearch">Search</button>
</EditForm>


@if (StoreApps == null)
{
    <p><em>Searching...</em></p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var storeapp in StoreApps)
            {
                <tr class="justify-content-center">
                    <td>@storeapp.Id</td>
                    <td>@storeapp.Name</td>
                </tr>
            }
        </tbody>
    </table>
}




@code {
    private SearchModel searchModel = new();

    //Logging Entries to Searchbox
    private void SearchStore()
    {
        Logger.LogInformation("SearchStore called");
        Logger.LogInformation(searchModel.Name);
    }
    public void EnterSearch()
    {
        GetSearch(searchModel.Name);
    }

    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    //Calling the API
    public async Task GetSearch(string search)
    {
        var apiName = "api/StoreApps/Search?SearchTerm=";
        apiName += search;
        var httpResponse = await client.GetAsync(apiName);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}


