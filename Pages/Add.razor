@page "/add"
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient client

@using Newtonsoft.Json
@using Data

@using Microsoft.Extensions.Logging


<h1>Add Record</h1>

<p>This component demonstrates adding a record to the datasaset.</p>


<p>Please enter a record to the datasaset and select submit</p>

<EditForm class="form-inline my-2" Model="@addModel" OnValidSubmit="AddApp">
    <DataAnnotationsValidator />
    <ValidationSummary />


    <label for="AddName">Enter a name</label><br>
    <input type="text" id="name" name="name"><br>
    <br />
    <label for="AddRating">Enter a Rating</label><br>
    <input type="number" id="rating" name="rating" min="1" max="5">
    <br />
    <label for="AddPeople">Enter number of People</label><br>
    <input type="text" id="people" name="people"><br>
    <br />
    <label for="AddCategory">Enter a Category</label><br>
    <input type="text" id="category" name="category"><br>
    <br />
    <label for="AddDate">Enter a Date</label><br>
    <input type="date" id="date" name="date"><br>
    <br />
    <label for="AddPrice">Enter a Price</label><br>
    <input type="text" id="price" name="price"><br>
    <br />
    <button class="btn btn-outline-primary" type="button">Submit</button>
</EditForm>
<br />
<p>One way to tackle this problem;</p>
<ul>
    {

    <li>Add a form to the page e.g. inputs and a submit button.</li>
    <li>Post the form to the API to add the new record to the API's database.</li>
    <li>Add the response from the API to the empty StoreApps list.</li>
    <li>Show the result form your updated list.</li>
    <li><a href="https://docs.microsoft.com/en-us/aspnet/core/blazor/forms-validation?view=aspnetcore-5.0">Blazor Forms</a></li>
    <li><a href="https://docs.microsoft.com/en-us/previous-versions/aspnet/hh944682(v=vs.118)">PostAsJsonAsync Method</a></li>
    <li><a href="https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-5.0&tabs=visual-studio">API Post</a></li>
</ul>

@code {
    private AddModel addModel = new();

    private void AddApp()
    {

    }
    string responseBody = "";
    List<StoreApp> StoreApps = new List<StoreApp>();

    //Calling the API
    public async Task AddApp(AddModel addModel)
    {
        var apiName = "api/StoreApps";

        var addApp = new AddModel { Name = addModel.Name };
        var httpResponse = await client.PostAsJsonAsync(apiName, addApp);

        if (httpResponse.IsSuccessStatusCode)
        {
            responseBody = await httpResponse.Content.ReadAsStringAsync();
            StoreApps = JsonConvert.DeserializeObject<List<StoreApp>>(responseBody);
            StateHasChanged();
        }

    }
}

